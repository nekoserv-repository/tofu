flush ruleset

define iface = eth0
define host_ipv4 = {{ host_ipv4 }}
define host_ipv6 = {{ host_ipv6 }}
define host_ipv6_range = {{ host_ipv6_range }}
define cluster_ipv4 = {{ cluster_ipv4 }}
define cluster_ipv6 = {{ cluster_ipv6 }}

table inet filter {
	chain input {
		type filter hook input priority 0; policy drop;

		ct state invalid drop
		ct state { established, related } accept

		iif lo accept
		iif != lo ip daddr 127.0.0.0/8 drop
		iif != lo ip6 daddr ::1/128 drop

		iif $iface ip6 nexthdr icmpv6 icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept

		iif $iface tcp dport 22 accept
		iif $iface ip6 saddr $host_ipv6_range tcp dport { 6443, 10250 } accept

		iif != $iface ip saddr $cluster_ipv4 accept
		iif != $iface ip6 saddr $cluster_ipv6 accept
	}

	chain forward {
		type filter hook forward priority 0; policy drop;

		ip saddr $cluster_ipv4 accept
		ip daddr $cluster_ipv4 accept

		ip6 saddr $cluster_ipv6 accept
		ip6 daddr $cluster_ipv6 accept
	}

	chain output {
		type filter hook output priority 0; policy accept;
	}
}
